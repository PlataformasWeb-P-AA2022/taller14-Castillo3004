{"remainingRequest":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/src/components/CreateDepartamento.vue?vue&type=template&id=6d040d60&","dependencies":[{"path":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/src/components/CreateDepartamento.vue","mtime":1658260333034},{"path":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1658254421754},{"path":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658254422310},{"path":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1658254421754},{"path":"/home/salai/Escritorio/CarlosCastilloDW/taller14-Castillo3004/desarrollo/proyecto-vuejs/node_modules/vue-loader/lib/index.js","mtime":1658254422310}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}